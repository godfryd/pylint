.TH PYREVERSE 1 "August 18, 2008" pyreverse "User's Manual"
.SH NAME
pyreverse \- parse python sources files and extract diagrams from
them.

.SH SYNOPSIS
.B pyreverse 
.I {diagram|test|xmi}
.I [options]
<modules>

.SH DESCRIPTION
.B pyreverse
 is a python source analyzer. It can parse a python package and produce UML
 diagrams in different output formats. (dot, all formats available for dot, 
and vcg). (For now, the 'xmi' and 'tests' commands are not under developpement.)

 With different options, you can have fine tuning on what and how modules, 
 classes and attributes will be shown in the diagram.
 You can combine several modules in one project (except with 
.B -c
).

.SH COMMON OPTIONS

.IP "-h, --help"
 show this help message and exit
.IP "-p<name>, --project=<name>"
 set project name to <name> if not using -c option. (default:'No Name')
.IP "-i<file>, --ignore=<file>"
 add <file> (may be a directory) to the black list (not parsed)
.IP "-f<mode>, --filter-mode=<mode>"
 filter attributes and functions according to <mode>. You can combine 
 modes using '+' like 'SPECIAL+OTHER'. Correct modes are :
 'PUB_ONLY' filter all non public attributes (default)
 'ALL' no filter
 'SPECIAL' filter Python special functions except constructor
 'OTHER' filter protected and private attributes

.IP "-d<file>, --diadefs=<file>"
 create diagram according to the diagrams definitions in <file>
.IP "-c <class>, --class=<class>"
  create a class diagram with all classes related to <class>  [current: none]
  the class must be in the file <modules>. By default, this will include all
  ancestors and associated classes of <class> and include module names 
      (i.e. '-ASmy' ).

.IP   -a <ancestor>, --show-ancestors=<ancestor>
    show <ancestor> generations of ancestor classes not in <projects>
.IP   -A, --all-ancestors=[yn]
    show all ancestors off all classes in <projects> [current: none]
.IP   -s <ass_level>, --show-associated=<associated>
    show <ass_level> associated classes. <ass_level>=1 will only take classes
    directly related to the classes  in the project,  while <ass_level>=2 
    will also take all classes related to those fecthed by<depth>=1.
.IP   -S, --all-associated=[yn]
    show recursively all associated off all associated classes [current: none]

.IP  "-b, --builtin"
 include builtin objects in representation of classes [current: False]
.IP   "-m [yn], --module-names=[yn]"
 include module name in representation of classes. This will include full module path in the class name. [current: none]


.SH PYREVERSE DIAGRAM
 If no -c and no --diadefs option specified, 
.B pyreverse diagram
will create 
    \- a diagram 'classes_<name>' for the classes in <modules> and
    \- a diagram 'packages_<name>' for the packages in <modules>.
 With -c,
.B pyreverse diagram
creates a diagram for each <class> with same name (adding an output file extension).
.IP "-o <format>, --output=<format>"
create a *.<format> output file if format available. Available formats
are all formats that dot can produce and 
.B vcg.
[default: dot]


.SH REQUIRES
Python

.SH "SEE ALSO"
.B dot(1), pylint(1)

.I http://www.logilab.org/pyreverse

.SH AUTHORS
Sylvain Thenault, Emile Anclin

This manpage was written by Emile Anclin <emile.anclin@logilab.fr>
